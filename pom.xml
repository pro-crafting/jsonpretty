<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.pro-crafting</groupId>
        <artifactId>pc-parent</artifactId>
        <version>9</version>
    </parent>

    <groupId>com.pro-crafting.tools</groupId>
    <artifactId>jsonpretty-web</artifactId>
    <version>1.0.4-SNAPSHOT</version>

    <scm>
        <connection>scm:git:git@github.com:pro-crafting/jsonpretty.git</connection>
        <url>https://github.com/pro-crafting/jsonpretty</url>
        <developerConnection>scm:git:git@github.com:pro-crafting/jsonpretty.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <!-- Settings -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Port is set during execution of build-helper-maven-plugin:reserve-network-port goal -->
        <it.baseuri>127.0.0.1</it.baseuri>
        <sonar.organization>pro-crafting</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>

        <docker.name>postremus/${project.artifactId}</docker.name>

        <file.runner>${project.build.finalName}-runner.jar</file.runner>

        <!-- Dependency Versions -->
        <version.quarkus>1.8.1.Final</version.quarkus>

        <!-- Plugin Versions -->
        <version.docker-maven-plugin>0.34.0</version.docker-maven-plugin>
        <version.maven-surefire-plugin>2.21.0</version.maven-surefire-plugin>
        <version.maven-failsafe-plugin>2.21.0</version.maven-failsafe-plugin>
        <version.sonar-maven-plugin>3.4.1.1168</version.sonar-maven-plugin>

        <!-- Test Dependency Versions -->
        <junit.jupiter.version>5.2.0</junit.jupiter.version>
        <junit.platform.version>1.2.0</junit.platform.version>
        <version.mockito-core>2.18.3</version.mockito-core>
        <version.rest-assured>3.1.0</version.rest-assured>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${version.quarkus}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${version.docker-maven-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- Internal dependencies -->

            <!-- External dependencies -->
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${version.quarkus}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Quarkus Extensions -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jackson</artifactId>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-metrics</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito-core}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${version.mockito-core}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.rest-assured}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>jenkins-ci</id>
            <properties>
                <!-- Environment variable pointing to the real fqdn of the host. Defined inside of jenkins -->
                <!--suppress UnresolvedMavenProperty -->
                <it.baseuri>${env.PC_FQDN}</it.baseuri>
            </properties>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <verbose>build</verbose>
                            <images>
                                <image>
                                    <name>${docker.name}</name>
                                    <build>
                                        <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                                        <contextDir>${project.basedir}</contextDir>

                                        <tags>
                                            <tag>latest</tag>
                                            <tag>${project.version}</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>deploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>